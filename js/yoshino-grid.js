(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{105:function(e,n,o){var t=o(91);"string"==typeof t&&(t=[[e.i,t,""]]);var l={hmr:!0,transform:void 0},a=o(14)(t,l);t.locals&&(e.exports=t.locals),t.locals||e.hot.accept(91,function(n){var t;"string"==typeof(t=o(91))&&(t=[[e.i,t,""]]),a(t)}),e.hot.dispose(function(){a()});var r=o(13)(e.i,{fileMap:"{fileName}"});e.hot.dispose(r)},106:function(e,n){e.exports="import * as React from 'react';\nimport Markdown from '@docs/components/Markdown/';\nimport { Grid, Slider } from '@yoshino/components/';\n\nconst { Row, Col } = Grid;\n\nexport default class extends React.Component {\n  state = {\n    gutter: 8,\n    column: 2,\n  };\n\n  render() {\n    const col = [];\n    let md = `\\`\\`\\`jsx\\r\\n<Row gutter={${this.state.gutter}}>\\r\\n`;\n\n    for (let i = 0; i < this.state.column; i++) {\n      col.push(\n        <Col span={24 / this.state.column} key={i}><div className='columns'>Coloums-{i + 1}</div></Col>\n      );\n      md += `  <Col span={${24 / this.state.column}}>Coloums-${i + 1}</Col>\\r\\n`;\n    }\n    md += '</Row>```';\n    return (\n        <div className='grid-config'>\n          <div style={{width: 350}}>\n            <p>gutter value: {this.state.gutter}</p>\n            <Slider\n              value={this.state.gutter}\n              min={8}\n              max={48}\n              step={8}\n              onChange={(v) => this.setState({gutter: v})}\n            />\n            <p>column count: {this.state.column}</p>\n            <Slider\n              value={this.state.column}\n              min={2}\n              max={12}\n              step={2}\n              onChange={(v) => {\n                let temp = v;\n                if (v === 10) {\n                  temp += 2;\n                }\n                this.setState({column: temp});\n              }}\n            />\n          </div>\n          <Markdown text={md}/>\n          <Row gutter={this.state.gutter}>\n            {col}\n          </Row>\n        </div>\n      );\n  }\n}\n"},107:function(e,n){e.exports="#### 配置器\n简单配置几种等分栅格和间距。"},108:function(e,n){e.exports="import * as React from 'react';\nimport { Grid } from '@yoshino/components/';\n\nconst { Row, Col } = Grid;\n\nexport default function() {\n  return (\n    <div>\n       <Row>\n        <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>Col</Col>\n        <Col xs={{ span: 11, offset: 1 }} lg={{ span: 6, offset: 2 }}>Col</Col>\n        <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>Col</Col>\n      </Row>\n    </div>\n  );\n}\n"},109:function(e,n){e.exports="#### 其他属性\n嵌套在不同响应式布局中使用属性"},110:function(e,n){e.exports="import * as React from 'react';\nimport { Grid } from '@yoshino/components/';\n\nconst { Row, Col } = Grid;\n\nexport default function() {\n  return (\n    <div>\n      <Row type='flex'>\n        <Col span={6} order={4}>1 col-order-4</Col>\n        <Col span={6} order={3}>2 col-order-3</Col>\n        <Col span={6} order={2}>3 col-order-2</Col>\n        <Col span={6} order={1}>4 col-order-1</Col>\n      </Row>\n    </div>\n  );\n}\n"},111:function(e,n){e.exports="#### Flex排序\n设置`order`进行排序"},112:function(e,n){e.exports="import * as React from 'react';\nimport { Grid } from '@yoshino/components/';\n\nconst { Row, Col } = Grid;\n\n// tslint:disable no-any\nconst DemoBox = (props: any) => {\n  const style = {\n    height: props.value,\n    lineHeight: `${props.value}px`,\n  };\n\n  return (\n    <div style={style}>{props.children}</div>\n  );\n};\n\nexport default function() {\n  return (\n    <div>\n      <p>向上对齐</p>\n      <Row type='flex' justify='center' align='top'>\n        <Col span={4}><DemoBox value={100}>col-4</DemoBox></Col>\n        <Col span={4}><DemoBox value={50}>col-4</DemoBox></Col>\n        <Col span={4}><DemoBox value={120}>col-4</DemoBox></Col>\n        <Col span={4}><DemoBox value={80}>col-4</DemoBox></Col>\n      </Row>\n\n      <p>居中对齐</p>\n      <Row type='flex' justify='space-around' align='middle'>\n        <Col span={4}><DemoBox value={100}>col-4</DemoBox></Col>\n        <Col span={4}><DemoBox value={50}>col-4</DemoBox></Col>\n        <Col span={4}><DemoBox value={120}>col-4</DemoBox></Col>\n        <Col span={4}><DemoBox value={80}>col-4</DemoBox></Col>\n      </Row>\n\n      <p>底部对齐</p>\n      <Row type='flex' justify='space-between' align='bottom'>\n        <Col span={4}><DemoBox value={100}>col-4</DemoBox></Col>\n        <Col span={4}><DemoBox value={50}>col-4</DemoBox></Col>\n        <Col span={4}><DemoBox value={120}>col-4</DemoBox></Col>\n        <Col span={4}><DemoBox value={80}>col-4</DemoBox></Col>\n      </Row>\n    </div>\n  );\n}\n"},113:function(e,n){e.exports="#### Flex对齐\n通过设置`align`指定对齐方式。"},114:function(e,n){e.exports="import * as React from 'react';\nimport { Grid } from '@yoshino/components/';\n\nconst { Row, Col } = Grid;\n\nexport default function() {\n  return (\n    <div>\n      <p>居左</p>\n      <Row type='flex' justify='start'>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n      </Row>\n\n      <p>居中</p>\n      <Row type='flex' justify='center'>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n      </Row>\n\n      <p>居右</p>\n      <Row type='flex' justify='end'>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n      </Row>\n\n      <p>均匀分布</p>\n      <Row type='flex' justify='space-between'>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n      </Row>\n\n      <p>散列分布</p>\n      <Row type='flex' justify='space-around'>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n        <Col span={4}>col-4</Col>\n      </Row>\n    </div>\n  );\n}\n"},115:function(e,n){e.exports="#### Flex布局\n设置`type`为`flex`, 然后定义`justify`为`start`, `center`, `end`, `space-between`, `space-around`。"},116:function(e,n){e.exports="import * as React from 'react';\nimport { Grid } from '@yoshino/components/';\n\nconst { Row, Col } = Grid;\n\nexport default function() {\n  return (\n    <div>\n      <Row>\n        <Col span={18} push={6}>col-18 col-push-6</Col>\n        <Col span={6} pull={18}>col-6 col-pull-18</Col>\n      </Row>\n    </div>\n  );\n}\n"},117:function(e,n){e.exports="#### 栅格排序\n通过`push`和`pull`进行栅格排序。"},118:function(e,n){e.exports="import * as React from 'react';\nimport { Grid } from '@yoshino/components/';\n\nconst { Row, Col } = Grid;\n\nexport default function() {\n  return (\n    <div>\n      <Row>\n        <Col span={8}>col-8</Col>\n        <Col span={8} offset={8}>col-8</Col>\n      </Row>\n      <Row>\n        <Col span={6} offset={6}>col-6 col-offset-6</Col>\n        <Col span={6} offset={6}>col-6 col-offset-6</Col>\n      </Row>\n      <Row>\n        <Col span={12} offset={6}>col-12 col-offset-6</Col>\n      </Row>\n    </div>\n  );\n}\n"},119:function(e,n){e.exports="#### 左右偏移\n`offset`可以将列`Col`向右侧偏移对应个数的`Col`。"},120:function(e,n){e.exports="import * as React from 'react';\nimport { Grid } from '@yoshino/components/';\n\nconst { Row, Col } = Grid;\n\nexport default function() {\n  return (\n    <div>\n      <Row>\n        <Col span={12}>col-12</Col>\n        <Col span={12}>col-12</Col>\n      </Row>\n      <Row>\n        <Col span={8}>col-8</Col>\n        <Col span={8}>col-8</Col>\n        <Col span={8}>col-8</Col>\n      </Row>\n      <Row>\n        <Col span={6}>col-6</Col>\n        <Col span={6}>col-6</Col>\n        <Col span={6}>col-6</Col>\n        <Col span={6}>col-6</Col>\n      </Row>\n    </div>\n  );\n}\n"},121:function(e,n){e.exports="#### 基础栅格\n通过`Row`和`col`组件，并通过`Col`组件的`span`属性我们就可以自由地组合布局"},122:function(e,n){e.exports="## Grid \n`Grid`区域按照`24`等分的原则进行划分。\n\n我们定义了两个概念，行row和列col，具体使用方法如下：\n- 使用row在水平方向创建一行\n- 将一组col插入在row中\n- 在每个col中，键入自己的内容\n- 通过设置col的span参数，指定跨越的范围，其范围是1到24\n- 每个row中的col总和应该为24\n\n## 代码演示\n"},564:function(e,n,o){"use strict";o.r(n);var t=o(1),l=o(0),a=o(122),r=o(88),c=o(90),s=o(89),p=[{title:"API - Row",json:[{props:"align",intro:"`flex`模式下垂直方向对齐方式",type:"`top` | `middle` | `bottom`",defaultValue:"top"},{props:"gutter",intro:"栅格间隔",type:"number",defaultValue:"0"},{props:"justify",intro:"`flex`模式下水平方向对齐方式",type:"`start` | `end` | `center` | `space-around` | `space-between`",defaultValue:"start"},{props:"type",intro:"布局模式，需要浏览器自持`flex`",type:"`flex`",defaultValue:"-"}]},{title:"API - Col",json:[{props:"span",intro:"栅格的占位格数，可选值为0~24的整数，为 0 时，相当于display:none",type:"number",defaultValue:"0"},{props:"offset",intro:"栅格左侧的间隔格数，间隔内不可以有栅格",type:"number",defaultValue:"0"},{props:"pull",intro:"栅格向左移动格数",type:"number",defaultValue:"0"},{props:"push",intro:"栅格向右移动格数",type:"number",defaultValue:"0"},{props:"order",intro:"`type`设置为`flex`的时候生效",type:"number",defaultValue:"-"},{props:"xs",intro:"`<576px` 响应式栅格，可为栅格数或一个包含其他属性的对象",type:"`number` | `object`",defaultValue:"-"},{props:"sm",intro:"`≥576px` 响应式栅格，可为栅格数或一个包含其他属性的对象",type:"`number` | `object`",defaultValue:"-"},{props:"md",intro:"`≥768px` 响应式栅格，可为栅格数或一个包含其他属性的对象",type:"`number` | `object`",defaultValue:"-"},{props:"lg",intro:"`≥992px` 响应式栅格，可为栅格数或一个包含其他属性的对象",type:"`number` | `object`",defaultValue:"-"},{props:"xl",intro:"`≥1200px` 响应式栅格，可为栅格数或一个包含其他属性的对象",type:"`number` | `object`",defaultValue:"-"},{props:"xxl",intro:"`≥1600px` 响应式栅格，可为栅格数或一个包含其他属性的对象",type:"`number` | `object`",defaultValue:"-"}]}],i=o(7),u=i.n.Row,m=i.n.Col,d=function(){return l.createElement("div",null,l.createElement(u,null,l.createElement(m,{span:12},"col-12"),l.createElement(m,{span:12},"col-12")),l.createElement(u,null,l.createElement(m,{span:8},"col-8"),l.createElement(m,{span:8},"col-8"),l.createElement(m,{span:8},"col-8")),l.createElement(u,null,l.createElement(m,{span:6},"col-6"),l.createElement(m,{span:6},"col-6"),l.createElement(m,{span:6},"col-6"),l.createElement(m,{span:6},"col-6")))},f=o(121),C=i.n.Row,E=i.n.Col,x=function(){return l.createElement("div",null,l.createElement(C,null,l.createElement(E,{span:8},"col-8"),l.createElement(E,{span:8,offset:8},"col-8")),l.createElement(C,null,l.createElement(E,{span:6,offset:6},"col-6 col-offset-6"),l.createElement(E,{span:6,offset:6},"col-6 col-offset-6")),l.createElement(C,null,l.createElement(E,{span:12,offset:6},"col-12 col-offset-6")))},v=o(119),y=i.n.Row,w=i.n.Col,h=function(){return l.createElement("div",null,l.createElement(y,null,l.createElement(w,{span:18,push:6},"col-18 col-push-6"),l.createElement(w,{span:6,pull:18},"col-6 col-pull-18")))},g=o(117),R=i.n.Row,b=i.n.Col,j=function(){return l.createElement("div",null,l.createElement("p",null,"居左"),l.createElement(R,{type:"flex",justify:"start"},l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4")),l.createElement("p",null,"居中"),l.createElement(R,{type:"flex",justify:"center"},l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4")),l.createElement("p",null,"居右"),l.createElement(R,{type:"flex",justify:"end"},l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4")),l.createElement("p",null,"均匀分布"),l.createElement(R,{type:"flex",justify:"space-between"},l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4")),l.createElement("p",null,"散列分布"),l.createElement(R,{type:"flex",justify:"space-around"},l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4"),l.createElement(b,{span:4},"col-4")))},D=o(115),B=i.n.Row,G=i.n.Col,k=function(e){var n={height:e.value,lineHeight:e.value+"px"};return l.createElement("div",{style:n},e.children)},V=function(){return l.createElement("div",null,l.createElement("p",null,"向上对齐"),l.createElement(B,{type:"flex",justify:"center",align:"top"},l.createElement(G,{span:4},l.createElement(k,{value:100},"col-4")),l.createElement(G,{span:4},l.createElement(k,{value:50},"col-4")),l.createElement(G,{span:4},l.createElement(k,{value:120},"col-4")),l.createElement(G,{span:4},l.createElement(k,{value:80},"col-4"))),l.createElement("p",null,"居中对齐"),l.createElement(B,{type:"flex",justify:"space-around",align:"middle"},l.createElement(G,{span:4},l.createElement(k,{value:100},"col-4")),l.createElement(G,{span:4},l.createElement(k,{value:50},"col-4")),l.createElement(G,{span:4},l.createElement(k,{value:120},"col-4")),l.createElement(G,{span:4},l.createElement(k,{value:80},"col-4"))),l.createElement("p",null,"底部对齐"),l.createElement(B,{type:"flex",justify:"space-between",align:"bottom"},l.createElement(G,{span:4},l.createElement(k,{value:100},"col-4")),l.createElement(G,{span:4},l.createElement(k,{value:50},"col-4")),l.createElement(G,{span:4},l.createElement(k,{value:120},"col-4")),l.createElement(G,{span:4},l.createElement(k,{value:80},"col-4"))))},S=o(113),N=i.n.Row,M=i.n.Col,$=function(){return l.createElement("div",null,l.createElement(N,{type:"flex"},l.createElement(M,{span:6,order:4},"1 col-order-4"),l.createElement(M,{span:6,order:3},"2 col-order-3"),l.createElement(M,{span:6,order:2},"3 col-order-2"),l.createElement(M,{span:6,order:1},"4 col-order-1")))},_=o(111),F=i.n.Row,A=i.n.Col,H=function(){return l.createElement("div",null,l.createElement(F,null,l.createElement(A,{xs:{span:5,offset:1},lg:{span:6,offset:2}},"Col"),l.createElement(A,{xs:{span:11,offset:1},lg:{span:6,offset:2}},"Col"),l.createElement(A,{xs:{span:5,offset:1},lg:{span:6,offset:2}},"Col")))},I=o(109),J=i.n.Row,P=i.n.Col,z=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.state={gutter:8,column:2},n}return t.__extends(n,e),n.prototype.render=function(){for(var e=this,n=[],o="```jsx\r\n<Row gutter={"+this.state.gutter+"}>\r\n",t=0;t<this.state.column;t++)n.push(l.createElement(P,{span:24/this.state.column,key:t},l.createElement("div",{className:"columns"},"Coloums-",t+1))),o+="  <Col span={"+24/this.state.column+"}>Coloums-"+(t+1)+"</Col>\r\n";return o+="</Row>```",l.createElement("div",{className:"grid-config"},l.createElement("div",{style:{width:350}},l.createElement("p",null,"gutter value: ",this.state.gutter),l.createElement(i.D,{value:this.state.gutter,min:8,max:48,step:8,onChange:function(n){return e.setState({gutter:n})}}),l.createElement("p",null,"column count: ",this.state.column),l.createElement(i.D,{value:this.state.column,min:2,max:12,step:2,onChange:function(n){var o=n;10===n&&(o+=2),e.setState({column:o})}})),l.createElement(r.a,{text:o}),l.createElement(J,{gutter:this.state.gutter},n))},n}(l.Component),q=o(107),K=(o(105),o(120)),L=o(118),O=o(116),Q=o(114),T=o(112),U=o(110),W=o(108),X=o(106),Y=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return t.__extends(n,e),n.prototype.render=function(){return l.createElement("div",null,l.createElement(r.a,{text:a}),l.createElement(c.a,{text:f,demo:l.createElement(d,null),code:K}),l.createElement(c.a,{text:v,demo:l.createElement(x,null),code:L}),l.createElement(c.a,{text:g,demo:l.createElement(h,null),code:O}),l.createElement(c.a,{text:D,demo:l.createElement(j,null),code:Q}),l.createElement(c.a,{text:S,demo:l.createElement(V,null),code:T}),l.createElement(c.a,{text:_,demo:l.createElement($,null),code:U}),l.createElement(c.a,{text:I,demo:l.createElement(H,null),code:W}),l.createElement(c.a,{text:q,demo:l.createElement(z,null),code:X}),l.createElement(s.a,{api:p}))},n}(l.Component);n.default=Y},91:function(e,n,o){(e.exports=o(15)(!1)).push([e.i,".yoshino-row > div {\n  text-align: center;\n  border-radius: 0;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  color: #fff;\n  padding: 15px;\n}\n.yoshino-row > div:nth-child(odd) {\n  background: #51b26d;\n  opacity: 0.8;\n}\n.yoshino-row > div:nth-child(even) {\n  background: #51b26d;\n}\n.grid-config .yoshino-row > div:nth-child(odd) {\n  background: none;\n  opacity: 1;\n}\n.grid-config .yoshino-row > div:nth-child(even) {\n  background: none;\n}\n.grid-config .yoshino-row > div > .columns {\n  padding: 10px 5px;\n  font-size: 12px;\n}\n.grid-config .yoshino-row > div > .columns:nth-child(odd) {\n  background: #51b26d;\n  opacity: 0.8;\n}\n.grid-config .yoshino-row > div > .columns:nth-child(even) {\n  background: #51b26d;\n}\n.grid-config .yoshino-row > div > div:nth-child(odd) {\n  background: #51b26d;\n  opacity: 0.8;\n}\n.grid-config .yoshino-row > div > div:nth-child(even) {\n  background: #51b26d;\n}\n",""])}}]);