(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{176:function(e,t){e.exports='import * as React from \'react\';\nimport { Loading } from \'../../../../components/\';\n\nexport default function () {\n  return (\n    <div>\n      <Loading text="自定义加载文本" size="large" type="b"/>\n      <Loading text="自定义加载文本" size="large" type="c"/>\n      <Loading text="自定义加载文本" size="large" type="d"/>\n    </div>\n  )\n}\n'},177:function(e,t){e.exports="#### 其余加载样式。\n另外三种加载样式。\n"},178:function(e,t){e.exports='import * as React from \'react\';\nimport { Loading } from \'../../../../components/\';\n\nexport default function () {\n  return (\n    <div>\n      <Loading size="small"/>\n      <Loading text/>\n      <Loading text="自定义加载文本" size="large"/>\n    </div>\n  )\n}\n'},179:function(e,t){e.exports="#### 基本使用\n简单的基本使用。\n"},180:function(e,t){e.exports="## Loading 加载\n表示当前处于加载状态中。\n\n## 代码演示\n"},502:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n(180),o=n(86),l=n(88),i=n(87),c=[{title:"API",json:[{props:"type",intro:"加载图标的样式",type:"'a' | 'b' | 'c' | 'd';",defaultValue:"a"},{props:"size",intro:"加载图标大小",type:"'small' | 'default' | 'large'",defaultValue:"default"},{props:"text",intro:"加载文本",type:"string | boolean",defaultValue:"-"}]}],s=n(8),d=function(){return r.createElement("div",null,r.createElement(s.r,{size:"small"}),r.createElement(s.r,{text:!0}),r.createElement(s.r,{text:"自定义加载文本",size:"large"}))},p=n(179),u=function(){return r.createElement("div",null,r.createElement(s.r,{text:"自定义加载文本",size:"large",type:"b"}),r.createElement(s.r,{text:"自定义加载文本",size:"large",type:"c"}),r.createElement(s.r,{text:"自定义加载文本",size:"large",type:"d"}))},m=n(177);n.d(t,"default",function(){return g});const f=n(178),x=n(176);class g extends r.Component{render(){return r.createElement("div",null,r.createElement(o.a,{text:a}),r.createElement(l.a,{text:p,demo:r.createElement(d,null),code:f}),r.createElement(l.a,{text:m,demo:r.createElement(u,null),code:x}),r.createElement(i.a,{api:c}))}}}}]);