(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{140:function(e,t){e.exports="import * as React from 'react';\nimport { Pagination } from '../../../../components/';\n\nexport default class App extends React.Component {\n  state = {\n    current: 1,\n  }\n\n  render() {\n    return (\n      <Pagination\n        current={this.state.current}\n        total={200}\n        onChange={(current) => {\n          this.setState({current});\n        }}\n        next=\"下一页\"\n        previous=\"上一页\"\n      />\n    )\n  }\n}\n"},141:function(e,t){e.exports="#### 受控组件\n受控组件\n"},142:function(e,t){e.exports="import * as React from 'react';\nimport { Pagination } from '../../../../components/';\n\nexport default function () {\n  return (\n    <Pagination total={50}/>\n  )\n}\n"},143:function(e,t){e.exports="#### 基本使用\n简单的基本使用。\n"},144:function(e,t){e.exports="## Pagination 分页\n用于分割多页内容。\n\n## 代码演示\n"},468:function(e,t,n){"use strict";n.r(t);var r=n(0),o=n(144),a=n(57),u=n(59),p=n(58),s=[{title:"API",json:[{props:"current",intro:"当前页数",type:"number",defaultValue:"-"},{props:"defaultCurrent",intro:"默认当前页数",type:"number",defaultValue:"1"},{props:"pageSize",intro:"每页条数",type:"number",defaultValue:"10"},{props:"total",intro:"总条数",type:"nuumber",defaultValue:"-"},{props:"max",intro:"显示页码块最多的个数",type:"number",defaultValue:"5"},{props:"next",intro:"自定义文本-下一页",type:"string | ReactNode",defaultValue:"-"},{props:"previous",intro:"自定义文本-上一页",type:"string | ReactNode",defaultValue:"-"},{props:"onChange",intro:"页码改变回调",type:"(current: number, pageSize: number) => void",defaultValue:"-"}]}],i=n(8),c=function(){return r.createElement(i.u,{total:50})},l=n(143);class m extends r.Component{constructor(){super(...arguments),this.state={current:1}}render(){return r.createElement(i.u,{current:this.state.current,total:200,onChange:e=>{this.setState({current:e})},next:"下一页",previous:"上一页"})}}var d=n(141);n.d(t,"default",function(){return g});const f=n(142),x=n(140);class g extends r.Component{render(){return r.createElement("div",null,r.createElement(a.a,{text:o}),r.createElement(u.a,{text:l,demo:r.createElement(c,null),code:f}),r.createElement(u.a,{text:d,demo:r.createElement(m,null),code:x}),r.createElement(p.a,{api:s}))}}}}]);