(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{281:function(e,t){e.exports="import * as React from 'react';\nimport { AutoComplete } from '../../../../components/';\n\nexport default class AutoCompleteFilter extends React.Component {\n  state = {\n    val:'',\n  };\n\n  onFilter = (value: any) => {\n    if (value !== '') {\n      return [value, `${value}${value}`, `${value}${value}${value}`];\n    }\n    return [];\n  }\n\n  render() {\n    return (\n      <div>\n        <AutoComplete\n          value={this.state.val}\n          dataSource={[]}\n          onFilter={this.onFilter}\n          onChange={(val) => this.setState({val})}  \n        />\n      </div>\n    )\n  }\n}"},282:function(e,t){e.exports="#### 自定义过滤函数\n通过 `onFilter` 设置筛选结果，返回值为过滤后需要展示的结果。\n"},283:function(e,t){e.exports="import * as React from 'react';\nimport { AutoComplete } from '../../../../components/';\n\nexport default function () {\n  return (\n    <div>\n      <AutoComplete dataSource={['1', 'asdad', '777',]}></AutoComplete>\n    </div>\n  )\n}\n"},284:function(e,t){e.exports="#### 默认\n通过 dataSource 设置自动完成的数据源\n"},285:function(e,t){e.exports="## AutoComplete 自动完成\n用于辅助补全输入项\n\n## 代码演示\n"},521:function(e,t,n){"use strict";n.r(t);var a=n(0),o=n(285),r=n(86),l=n(88),u=n(87),i=[{title:"API",json:[{props:"dataSource",intro:"自动补全数据源",type:"any[]",defaultValue:"[]"},{props:"activeFirstOption",intro:"高亮第一项",type:"boolean",defaultValue:"false"},{props:"onFilter",intro:"自定义过滤函数",type:"(value: any, dataSource: any[]) => string[];",defaultValue:"-"}]}],s=n(8),c=function(){return a.createElement("div",null,a.createElement(s.b,{dataSource:["1","asdad","777"]}))},p=n(284);class d extends a.Component{constructor(){super(...arguments),this.state={val:""},this.onFilter=(e=>""!==e?[e,`${e}${e}`,`${e}${e}${e}`]:[])}render(){return a.createElement("div",null,a.createElement(s.b,{value:this.state.val,dataSource:[],onFilter:this.onFilter,onChange:e=>this.setState({val:e})}))}}var m=n(282);n.d(t,"default",function(){return x});const v=n(283),f=n(281);class x extends a.Component{render(){return a.createElement("div",null,a.createElement(r.a,{text:o}),a.createElement(l.a,{text:p,demo:a.createElement(c,null),code:v}),a.createElement(l.a,{text:m,demo:a.createElement(d,null),code:f}),a.createElement(u.a,{api:i}))}}}}]);