(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{499:function(n,e){n.exports="<h1 align='center'>Yoshino</h1>\n<p align='center'>\n  <img src='https://img.shields.io/npm/v/yoshino.svg?style=flat-square' alt=\"version\">\n  <img src='https://img.shields.io/npm/l/express.svg' alt=\"license\">\n  <img src='https://img.shields.io/npm/dt/yoshino.svg?style=flat-square' alt=\"downloads\">\n  <a href='https://yoshino-ui.github.io'><img src='https://img.shields.io/badge/website%20-Yoshino-51b26d.svg'/></a>\n</p>\n\n## 特性\n- 使用`TypeScript`开发，提供`d.ts`文件帮助开发者提高开发速度\n- 提倡`OFA（one for all）`与`AFO（all for one）`概念，不同项目开发前通过[yoshino-cli](https://github.com/Yoshino-UI/yoshino-cli)根据项目ui规范进行定制化开发产出。\n- 除了简单通用的`ui`组件，`yoshino`抽离出了一些易用性比较高的特效(功能)组件，例如\n  - Helpers\n  - Ripple\n  - Transitions\n\n## 设计初衷\nYoshino本质上类似于Hexo，不同的样式风格组件类似于Hexo的各种theme，hexo官方仅提供了一套工具以及一个基础主题，Yoshino与其同理。\n\n开发者只需要像配置Hexo主题一样使用即可拥有不同风格的组件，你甚至可以在同一个项目中使用cli输出多种不同风格的组件。\n\n而不同主题的Yoshino需要开源社区完成，官方会提供类似的yoshino-theme-site来展示不同的主题，类似于[hexojs/site](https://github.com/hexojs/site)\n\n![](https://camo.githubusercontent.com/86c97306bd66c449e506000176be0fa515dc1baf/68747470733a2f2f706963312e7a68696d672e636f6d2f38302f76322d33633234646339313864623633666264313966363533313337343031343134365f68642e6a7067)\n\n目前cli工具仅支持组件创建产出，例如创建自定义Alert组件\n```\nyoshino new Alert\n```\n以后cli可以通过类似以下的指令配置输出对应规范组件，例如输出material-ui规范的Alert组件\n```js\nyoshino new Alert --theme material-ui\n```\n以及直接输出整个主题的组件库\n```js\nyoshino new all --theme material-ui\n```\n\n## 介绍\n`yoshino`组件库提供简单样式组件，可以通过[yoshino-cli](https://github.com/Yoshino-UI/yoshino-cli)根据项目进行定制化开发。\n\n将yoshino组件库less抽离出来维护，让开发者自定义维护。\n例如需要自定义Alert样式\n```js\nimport {Alert} from 'yoshino'；\nimport 'myAlert.less'\n```\n\nmyAlert.less为用户自定义样式\n\nyoshino根据开发者需要自定义的组件自定义生成对应开发模版\n\n```js\nyoshino new Alert\n```\n\n## 开发贡献流程\n```js\nnpm run dev // 启动开发环境\nnpm run new ComponentName // 新建组件\n```\n\n## 参考\n- [ant-design](https://github.com/ant-design/ant-design)\n- [muse-ui](https://github.com/museui/muse-ui)\n\n"},541:function(n,e,s){"use strict";s.r(e);var i=s(1),o=s(0),t=s(499),h=s(86),l=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return i.__extends(e,n),e.prototype.render=function(){return o.createElement("div",{className:""},o.createElement(h.a,{text:t}))},e}(o.Component);e.default=l}}]);