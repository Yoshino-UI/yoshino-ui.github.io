(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{446:function(n,s){n.exports="# Yoshino\n[![build](https://img.shields.io/npm/v/yoshino.svg?style=flat-square)](https://www.npmjs.com/package/yoshino) \n[![build](https://img.shields.io/npm/l/express.svg)](https://www.npmjs.com/package/yoshino)\n[![download](https://img.shields.io/npm/dt/yoshino.svg?style=flat-square)](https://www.npmjs.com/package/yoshino)\n\n## 特性\n- 使用`TypeScript`开发，提供`d.ts`文件帮助开发者提高开发速度\n- 提倡`OFA（one for all）`与`AFO（all for one）`概念，不同项目开发前通过[yoshino-cli](https://github.com/Yoshino-UI/yoshino-cli)根据项目ui规范进行定制化开发产出。\n- 除了简单通用的`ui`组件，`yoshino`抽离出了一些易用性比较高的特效(功能)组件，例如\n  - Helpers\n  - Ripple\n  - Transitions\n\n## 介绍\n`yoshino`组件库提供简单样式组件，可以通过[yoshino-cli](https://github.com/Yoshino-UI/yoshino-cli)根据项目进行定制化开发。\n\n将yoshino组件库less抽离出来维护，让开发者自定义维护。\n例如需要自定义Alert样式\n```js\nimport {Alert} from 'yoshino'；\nimport 'myAlert.less'\n```\n\nmyAlert.less为用户自定义样式\n\nyoshino根据开发者需要自定义的组件自定义生成对应开发模版\n\n```js\nyoshino new Alert\n```\n\n## 开发贡献流程\n```js\nnpm run dev // 启动开发环境\nnpm run new ComponentName // 新建组件\n```\n\n## 参考\n- [ant-design](https://github.com/ant-design/ant-design)\n- [muse-ui](https://github.com/museui/muse-ui)\n\n"},484:function(n,s,o){"use strict";o.r(s),o.d(s,"default",function(){return p});var t=o(0),e=o(446),i=o(57);class p extends t.Component{render(){return t.createElement("div",{className:""},t.createElement(i.a,{text:e}))}}}}]);