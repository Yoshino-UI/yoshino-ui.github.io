(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{105:function(n,t){n.exports="import * as React from 'react';\nimport { Notification as notification, Button} from '../../../../components/';\n\nexport default function () {\n  const open = () => {\n    notification.open({\n      title: 'open',\n      message: '一般的通知, duration时间长，可以通过close关闭',\n      duration: 99999999,\n      key: 111,\n    });\n  };\n\n  const placement = () => {\n    notification.config({\n      placement: 'topLeft',\n    })\n  };\n\n  const close = () => {\n    notification.close(111)\n  }\n\n  return (\n    <div>\n      <Button onClick={open}>打开一个带有key的通知</Button>\n      <Button onClick={close}>关闭</Button>\n      <Button onClick={placement}>修改placement</Button>\n    </div>\n  )\n}\n"},106:function(n,t){n.exports="#### config配置\n通知`placenebr`默认`topRight`后自动关闭，可以通过`config`配置修改默认值。"},107:function(n,t){n.exports="import * as React from 'react';\nimport { Notification as notification, Button, Icon } from '../../../../components/';\n\nexport default function () {\n  const open = () => {\n    notification.open({\n      title: 'open',\n      message: '一般的通知',\n    });\n  }\n\n  const openIcon = () =>{\n    notification.open({\n      title: '带有图标的open',\n      message: '你的项目收到一个新的通知',\n      icon: <Icon type='social-github'/>,\n    })\n  }\n\n  const success = () => {\n    notification.success({\n      title: 'success',\n      message: 'success success success!',\n    });\n  }\n\n  const info = () => {\n    notification.info({\n      title: 'info',\n      message: 'info info info!',\n    });\n  }\n\n  const warn = () => {\n    notification.warn({\n      title: 'warn',\n      message: 'warn warn warn!',\n    });\n  }\n\n  const error = () => {\n    notification.error({\n      title: 'error',\n      message: 'error error error!',\n    });\n  }\n\n  const destroy = () => {\n    notification.destroy();\n  }\n\n  return (\n    <div>\n      <Button onClick={open}>open</Button>\n      <Button onClick={openIcon}>自定义icon</Button>\n      <Button onClick={success}>success</Button>\n      <Button onClick={info}>info</Button>\n      <Button onClick={warn}>warn</Button>\n      <Button onClick={error}>error</Button>\n      <Button onClick={destroy}>点我清空所有notification</Button>\n    </div>\n  )\n}\n"},108:function(n,t){n.exports="#### 基本使用\n一般通知使用`open`，带有类别以及图标的通知为分别为`success`、`info`、`warning`、`error`，可以使用`destroy`清空所有通知，也可以使用`close`传入`key`关闭指定的通知。通知默认`5 秒`后自动关闭，可以通过`config`配置修改默认值，也可以作为参数传入。"},109:function(n,t){n.exports="提供全局配置方法，在调用前提前配置，全局一次生效。\n\n- notification.config(options)\n\n```jsx\nnotification.config({\n  placement: 'topLeft',\n  duration: 2000,\n});\n```"},110:function(n,t){n.exports="- notification.open(config)\n- notification.success(config)\n- notification.error(config)\n- notification.info(config)\n- notification.warn(config)\n- notification.close(key: String)\n- notification.destroy()\n\n`open`、`success`、`error`、`info`、`warn`都会返回一个`key`，用于`close`方法来关闭制定窗口。\n\nconfig 参数如下："},111:function(n,t){n.exports="## Notification 通知提醒框\n一般用于展示提醒信息。\n\n## 代码演示\n"},483:function(n,t,e){"use strict";e.r(t);var o=e(0),i=e(111),c=e(57),r=e(59),s=e(58),a=[{title:"API",intro:e(110),json:[{props:"key",intro:"当前通知唯一标志",type:"string | number",defaultValue:"-"},{props:"duration",intro:"当前通知自动关闭时间，单位`ms`",type:"number",defaultValue:"5000"},{props:"icon",intro:"自定义图标",type:"ReactNode",defaultValue:"-"},{props:"message",intro:"通知信息详情",type:"ReactNode | string",defaultValue:"-"},{props:"title",intro:"通知信息标题",type:"ReactNode | string",defaultValue:"-"},{props:"onClose",intro:"点击关闭按钮时触发的回调函数",type:"() => void",defaultValue:"-"}]},{title:"API - 全局配置",intro:e(109),json:[{props:"vertical",intro:"竖直方向距离浏览器窗口间距，等同于`top`、`bottom`，单位`px`",type:"number",defaultValue:"24"},{props:"horizontal",intro:"水平方向距离浏览器窗口间距，等同于`left`、`right`，单位`px`",type:"number",defaultValue:"24"},{props:"duration",intro:"当前通知自动关闭时间，单位`ms`",type:"number",defaultValue:"5000"},{props:"placement",intro:"通知框位置",type:"`topLeft` | `topRight` | `bottomLeft` | `bottomRight`",defaultValue:"topRight"}]}],l=e(8),u=function(){return o.createElement("div",null,o.createElement(l.g,{onClick:()=>{l.u.open({title:"open",message:"一般的通知"})}},"open"),o.createElement(l.g,{onClick:()=>{l.u.open({title:"带有图标的open",message:"你的项目收到一个新的通知",icon:o.createElement(l.n,{type:"social-github"})})}},"自定义icon"),o.createElement(l.g,{onClick:()=>{l.u.success({title:"success",message:"success success success!"})}},"success"),o.createElement(l.g,{onClick:()=>{l.u.info({title:"info",message:"info info info!"})}},"info"),o.createElement(l.g,{onClick:()=>{l.u.warn({title:"warn",message:"warn warn warn!"})}},"warn"),o.createElement(l.g,{onClick:()=>{l.u.error({title:"error",message:"error error error!"})}},"error"),o.createElement(l.g,{onClick:()=>{l.u.destroy()}},"点我清空所有notification"))},p=e(108),f=function(){return o.createElement("div",null,o.createElement(l.g,{onClick:()=>{l.u.open({title:"open",message:"一般的通知, duration时间长，可以通过close关闭",duration:99999999,key:111})}},"打开一个带有key的通知"),o.createElement(l.g,{onClick:()=>{l.u.close(111)}},"关闭"),o.createElement(l.g,{onClick:()=>{l.u.config({placement:"topLeft"})}},"修改placement"))},m=e(106);e.d(t,"default",function(){return k});const g=e(107),d=e(105);class k extends o.Component{render(){return o.createElement("div",null,o.createElement(c.a,{text:i}),o.createElement(r.a,{text:p,demo:o.createElement(u,null),code:g}),o.createElement(r.a,{text:m,demo:o.createElement(f,null),code:d}),o.createElement(s.a,{api:a}))}}}}]);